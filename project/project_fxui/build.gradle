/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    // use javafx modules
    //id 'org.openjfx.javafxplugin' version '0.0.8'
    
    // code quality with SpotBugs
	id 'com.github.spotbugs' version '2.0.0'
	
	// code quality with checkstyle
	id 'checkstyle'
}

spotbugs {
	// see http://gradle.monochromeroad.com/docs/dsl/org.gradle.api.plugins.quality.FindBugsExtension.html
	toolVersion = '4.0.0-beta4'
    ignoreFailures = true
    effort = "max"
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  	reports {
  		xml.enabled = false
  		html.enabled = true
  	}
}

checkstyle {
	configFile = project.file("../project_core/config/checkstyle/google_checks.xml")
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // brukergrensesnitt
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-junit:4.0.16-alpha'
    testImplementation 'org.mockito:mockito-core:2.28.2'
}
