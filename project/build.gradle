/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    //Test coverage
    id 'jacoco'
    
    // java application with main method
	id 'application'
	// use javafx modules
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

mainClassName = 'project.FxApp' // application plugin

javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml'  ]
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/customJacocoReportDir")
    applyTo run
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    maven {
      url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

	// persistens
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'
		
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

apply plugin: "org.openjfx.javafxplugin"
