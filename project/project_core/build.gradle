/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    //Test coverage
    id 'jacoco'
    
    // code quality with SpotBugs
	id 'com.github.spotbugs' version '2.0.0'
	
	// code quality with checkstyle
	id 'checkstyle'
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

spotbugs {
	// see http://gradle.monochromeroad.com/docs/dsl/org.gradle.api.plugins.quality.FindBugsExtension.html
	toolVersion = '4.0.0-beta4'
    ignoreFailures = true
    effort = "max"
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  	reports {
  		xml.enabled = false
  		html.enabled = true
  	}
}

checkstyle {
	configFile = project.file("config/checkstyle/google_checks.xml")
}



dependencies {
	// api means that those consuming our library 'inherits' this as a compile dependency
    api "com.fasterxml.jackson.core:jackson-databind:${depVersions.jackson}"
		
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}